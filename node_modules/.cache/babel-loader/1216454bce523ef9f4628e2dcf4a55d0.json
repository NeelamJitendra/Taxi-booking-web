{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\bzzt-test\\\\src\\\\MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, Polyline } from 'google-maps-react';\nimport taxi from './taxi.png';\nimport stop from './stop.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '75%',\n    height: '100%'\n  }\n};\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showMarkers = () => {\n      let route = this.props.route;\n      console.log('route:', route);\n\n      if (route.length !== 0) {\n        return /*#__PURE__*/_jsxDEV(Polyline, {\n          path: route,\n          geodesic: true,\n          options: {\n            strokeColor: '#40E0D0',\n            strokeOpacity: 1,\n            strokeWeight: 4,\n            icons: [{\n              offset: '0',\n              repeat: '10px'\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.stopMarker = () => {\n      let route = this.props.route;\n\n      if (route.length !== 0) {\n        console.log(route.length);\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: route[route.length - 1].lat,\n            lng: route[route.length - 1].lng\n          },\n          icon: {\n            url: stop,\n            scaledSize: new this.props.google.maps.Size(60, 50)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    const fromCoordinates = this.props.fromCoordinates;\n    let route = this.props.route;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        google: this.props.google,\n        zoom: 14,\n        initialCenter: {\n          lat: route[0].lat || 59.33,\n          lng: route[0].lng || 18.056\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          lat: route[0].lat,\n          lng: route[0].lng,\n          icon: {\n            url: taxi,\n            scaledSize: new this.props.google.maps.Size(60, 50)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 10\n        }, this), this.showMarkers(), this.stopMarker()]\n      }, 'map', true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default GoogleApiWrapper(props => ({\n  apiKey: props.apiKey\n}))(MapContainer);","map":{"version":3,"sources":["C:/JITENDRA/bzzt-test/src/MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","Polyline","taxi","stop","mapStyles","map","position","width","height","MapContainer","constructor","props","showMarkers","route","console","log","length","strokeColor","strokeOpacity","strokeWeight","icons","offset","repeat","stopMarker","lat","lng","url","scaledSize","google","maps","Size","render","style","Object","assign","fromCoordinates","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,EAAwCC,QAAxC,QAAwD,mBAAxD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,KAAK,EAAE,KAFJ;AAGHC,IAAAA,MAAM,EAAE;AAHL;AADW,CAAlB;AAQA,OAAO,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAC1Ca,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAGnBC,WAHmB,GAGL,MAAM;AAClB,UAAIC,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;;AACA,UAAIA,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACtB,4BAAO,QAAC,QAAD;AACH,UAAA,IAAI,EAAEH,KADH;AAEH,UAAA,QAAQ,EAAE,IAFP;AAGH,UAAA,OAAO,EAAE;AACPI,YAAAA,WAAW,EAAE,SADN;AAEPC,YAAAA,aAAa,EAAE,CAFR;AAGPC,YAAAA,YAAY,EAAE,CAHP;AAIPC,YAAAA,KAAK,EAAE,CAAC;AACJC,cAAAA,MAAM,EAAE,GADJ;AAEJC,cAAAA,MAAM,EAAE;AAFJ,aAAD;AAJA;AAHN;AAAA;AAAA;AAAA;AAAA,gBAAP;AAaD;AACF,KArBkB;;AAAA,SAuBnBC,UAvBmB,GAuBP,MAAM;AAChB,UAAIV,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;;AACA,UAAIA,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACtBF,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACF,4BAAO,QAAC,MAAD;AACP,UAAA,QAAQ,EAAE;AACRQ,YAAAA,GAAG,EAACX,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAL,CAAwBQ,GADpB;AAEFC,YAAAA,GAAG,EAACZ,KAAK,CAACA,KAAK,CAACG,MAAN,GAAe,CAAhB,CAAL,CAAwBS;AAF1B,WADH;AAKC,UAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAEvB,IADD;AAEJwB,YAAAA,UAAU,EAAE,IAAI,KAAKhB,KAAL,CAAWiB,MAAX,CAAkBC,IAAlB,CAAuBC,IAA3B,CAAgC,EAAhC,EAAoC,EAApC;AAFR;AALP;AAAA;AAAA;AAAA;AAAA,gBAAP;AAWC;AACF,KAvCkB;AAElB;;AAuCDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB9B,SAAS,CAACC,GAA5B,CAAd;AACA,UAAM8B,eAAe,GAAG,KAAKxB,KAAL,CAAWwB,eAAnC;AACA,QAAItB,KAAK,GAAG,KAAKF,KAAL,CAAWE,KAAvB;AACA,wBACE;AAAK,MAAA,KAAK,EAAEmB,KAAZ;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWiB,MADrB;AAEE,QAAA,IAAI,EAAE,EAFR;AAIE,QAAA,aAAa,EACX;AACEJ,UAAAA,GAAG,EAAEX,KAAK,CAAC,CAAD,CAAL,CAASW,GAAT,IAAgB,KADvB;AAEEC,UAAAA,GAAG,EAAEZ,KAAK,CAAC,CAAD,CAAL,CAASY,GAAT,IAAgB;AAFvB,SALJ;AAAA,gCAUC,QAAC,MAAD;AACG,UAAA,GAAG,EAAEZ,KAAK,CAAC,CAAD,CAAL,CAASW,GADjB;AAEG,UAAA,GAAG,EAAEX,KAAK,CAAC,CAAD,CAAL,CAASY,GAFjB;AAGG,UAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAExB,IADD;AAEJyB,YAAAA,UAAU,EAAE,IAAI,KAAKhB,KAAL,CAAWiB,MAAX,CAAkBC,IAAlB,CAAuBC,IAA3B,CAAgC,EAAhC,EAAoC,EAApC;AAFR;AAHT;AAAA;AAAA;AAAA;AAAA,gBAVD,EAmBG,KAAKlB,WAAL,EAnBH,EAoBG,KAAKW,UAAL,EApBH;AAAA,SAGM,KAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAxEyC;AA0E5C,eAAexB,gBAAgB,CAC5BY,KAAD,KAAY;AACVyB,EAAAA,MAAM,EAAEzB,KAAK,CAACyB;AADJ,CAAZ,CAD6B,CAAhB,CAIV3B,YAJU,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker, Polyline } from 'google-maps-react';\r\nimport taxi from './taxi.png';\r\nimport stop from './stop.png';\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '75%',\r\n    height: '100%'\r\n  }\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  };\r\n  showMarkers = () => {\r\n    let route = this.props.route;\r\n    console.log('route:', route);\r\n    if (route.length !== 0) {\r\n      return <Polyline\r\n          path={route}\r\n          geodesic={true}\r\n          options={{\r\n            strokeColor: '#40E0D0',\r\n            strokeOpacity: 1,\r\n            strokeWeight: 4,\r\n            icons: [{\r\n                offset: '0',\r\n                repeat: '10px'\r\n            }],\r\n          }}\r\n        />\r\n    }\r\n  }\r\n\r\n  stopMarker= () => {\r\n    let route = this.props.route;\r\n    if (route.length !== 0) {\r\n      console.log(route.length)\r\n    return <Marker\r\n    position={{ \r\n      lat:route[route.length - 1].lat,\r\n            lng:route[route.length - 1].lng\r\n          }}\r\n            icon={{\r\n              url: stop,\r\n              scaledSize: new this.props.google.maps.Size(60, 50)\r\n            }}\r\n\r\n          />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const style = Object.assign({}, mapStyles.map);\r\n    const fromCoordinates = this.props.fromCoordinates;\r\n    let route = this.props.route;\r\n    return (\r\n      <div style={style}>\r\n        <Map\r\n          google={this.props.google}\r\n          zoom={14}\r\n          key='map'\r\n          initialCenter={\r\n            {\r\n              lat: route[0].lat || 59.33,\r\n              lng: route[0].lng || 18.056\r\n            }\r\n          }\r\n        ><Marker\r\n            lat={route[0].lat}\r\n            lng={route[0].lng}\r\n            icon={{\r\n              url: taxi,\r\n              scaledSize: new this.props.google.maps.Size(60, 50)\r\n            }}\r\n\r\n          />\r\n          {this.showMarkers()}\r\n          {this.stopMarker()}\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GoogleApiWrapper(\r\n  (props) => ({\r\n    apiKey: props.apiKey\r\n  }\r\n  ))(MapContainer)"]},"metadata":{},"sourceType":"module"}