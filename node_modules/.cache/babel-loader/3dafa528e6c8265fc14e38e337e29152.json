{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\bzzt-test\\\\src\\\\NameSearch.js\";\nimport React, { Component } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NameSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = async value => {\n      const results = await geocodeByAddress(value);\n      const latLng = await getLatLng(results[0]);\n      setAddress(value);\n      setCoordinates(latLng);\n    };\n\n    this.state = {\n      address: \"\",\n      coordinates: {\n        lat: null,\n        lng: null\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: setAddress,\n        onSelect: handleSelect,\n        children: ({\n          getInputProps,\n          suggestions,\n          getSuggestionItemProps,\n          loading\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Latitude: \", coordinates.lat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Longitude: \", coordinates.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps({\n              placeholder: \"Type address\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"...loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 26\n            }, this) : null, suggestions.map(suggestion => {\n              const style = {\n                backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                  style\n                }),\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this);\n  }\n\n}\nexport default NameSearch;","map":{"version":3,"sources":["C:/JITENDRA/bzzt-test/src/NameSearch.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","NameSearch","constructor","props","handleSelect","value","results","latLng","setAddress","setCoordinates","state","address","coordinates","lat","lng","render","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;;AAKA,OAAO,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACtCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWpBC,YAXoB,GAWL,MAAMC,KAAN,IAAe;AAC7B,YAAMC,OAAO,GAAG,MAAMP,gBAAgB,CAACM,KAAD,CAAtC;AACA,YAAME,MAAM,GAAG,MAAMP,SAAS,CAACM,OAAO,CAAC,CAAD,CAAR,CAA9B;AACAE,MAAAA,UAAU,CAACH,KAAD,CAAV;AACAI,MAAAA,cAAc,CAACF,MAAD,CAAd;AACD,KAhBoB;;AAEf,SAAKG,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,WAAW,EAAC;AACRC,QAAAA,GAAG,EAAE,IADG;AAERC,QAAAA,GAAG,EAAE;AAFG;AAFH,KAAb;AAOH;;AASHC,EAAAA,MAAM,GAAE;AACR,wBACE;AAAA,6BACE,QAAC,kBAAD;AACE,QAAA,KAAK,EAAEJ,OADT;AAEE,QAAA,QAAQ,EAAEH,UAFZ;AAGE,QAAA,QAAQ,EAAEJ,YAHZ;AAAA,kBAKG,CAAC;AAAEY,UAAAA,aAAF;AAAiBC,UAAAA,WAAjB;AAA8BC,UAAAA,sBAA9B;AAAsDC,UAAAA;AAAtD,SAAD,kBACC;AAAA,kCACE;AAAA,qCAAcP,WAAW,CAACC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAeD,WAAW,CAACE,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE,sBAAWE,aAAa,CAAC;AAAEI,cAAAA,WAAW,EAAE;AAAf,aAAD;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAJF,eAME;AAAA,uBACGD,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,GAA2B,IADrC,EAGGF,WAAW,CAACI,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,oBAAMC,KAAK,GAAG;AACZC,gBAAAA,eAAe,EAAEF,UAAU,CAACG,MAAX,GAAoB,SAApB,GAAgC;AADrC,eAAd;AAIA,kCACE,oBAASP,sBAAsB,CAACI,UAAD,EAAa;AAAEC,kBAAAA;AAAF,iBAAb,CAA/B;AAAA,0BACGD,UAAU,CAACI;AADd;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,aAVA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmCC;;AAvDuC;AA0D1C,eAAezB,UAAf","sourcesContent":["import React, {Component}from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\n\r\nexport class NameSearch extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n        this.state = {\r\n            address:\"\",\r\n            coordinates:{\r\n                lat: null,\r\n                lng: null\r\n            }\r\n        };\r\n    }\r\n\r\n   handleSelect = async value => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n  };\r\n\r\n  render(){\r\n  return (\r\n    <div>\r\n      <PlacesAutocomplete\r\n        value={address}\r\n        onChange={setAddress}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <p>Latitude: {coordinates.lat}</p>\r\n            <p>Longitude: {coordinates.lng}</p>\r\n\r\n            <input {...getInputProps({ placeholder: \"Type address\" })} />\r\n\r\n            <div>\r\n              {loading ? <div>...loading</div> : null}\r\n\r\n              {suggestions.map(suggestion => {\r\n                const style = {\r\n                  backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\r\n                };\r\n\r\n                return (\r\n                  <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                    {suggestion.description}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n\r\n  }\r\n}\r\n\r\nexport default NameSearch;"]},"metadata":{},"sourceType":"module"}