{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\bzzt-test\\\\src\\\\NewMap.js\";\nimport React, { Component } from 'react';\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '75%',\n    height: '100%'\n  }\n};\nconst Map = withScriptjs(_c2 = withGoogleMap(_c = props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n  defaultZoom: 12,\n  defaultCenter: {\n    lat: 59.3293,\n    lng: 18.0686\n  },\n  onClick: e => props.onMapClick(e),\n  children: props.marks.map((mark, index) => /*#__PURE__*/_jsxDEV(Circle, {\n    center: mark,\n    radius: 1000,\n    options: {\n      strokeColor: \"#66009a\",\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: `#66009a`,\n      fillOpacity: 0.35,\n      zIndex: 1\n    }\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 17\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 9\n}, this)));\n_c3 = Map;\nexport class NewMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      marks: []\n    };\n    this.state = {\n      marks: []\n    };\n\n    this.setMark = e => {\n      this.setState({\n        marks: [...this.state.marks, e.latLng]\n      });\n    };\n\n    this.deleteMarkS = () => {\n      this.setState({\n        marks: []\n      });\n    };\n  }\n\n  render() {\n    const {\n      marks\n    } = this.state;\n    const style = Object.assign({}, mapStyles.map);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.deleteMark,\n        children: \"DELETE MARKS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }, this),\n        containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `400px`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 39\n        }, this),\n        mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: `100%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }, this),\n        onMapClick: this.setMark,\n        marks: marks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default GoogleApiWrapper(props => ({\n  apiKey: props.apiKey\n}))(NewMap);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Map$withScriptjs$withGoogleMap\");\n$RefreshReg$(_c2, \"Map$withScriptjs\");\n$RefreshReg$(_c3, \"Map\");","map":{"version":3,"sources":["C:/JITENDRA/bzzt-test/src/NewMap.js"],"names":["React","Component","GoogleApiWrapper","InfoWindow","Marker","mapStyles","map","position","width","height","Map","withScriptjs","withGoogleMap","props","lat","lng","e","onMapClick","marks","mark","index","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","zIndex","NewMap","state","showingInfoWindow","activeMarker","selectedPlace","setMark","setState","latLng","deleteMarkS","render","style","Object","assign","deleteMark","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n    map: {\r\n      position: 'absolute',\r\n      width: '75%',\r\n      height: '100%'\r\n    }\r\n  };\r\n\r\n  const Map = withScriptjs(\r\n    withGoogleMap(props => (\r\n        <GoogleMap\r\n            defaultZoom={12}\r\n            defaultCenter={{ lat: 59.3293, lng: 18.0686 }}\r\n            onClick={e => props.onMapClick(e)}\r\n        >\r\n            {props.marks.map((mark, index) => (\r\n                <Circle\r\n                    key={index}\r\n                    center={mark}\r\n                    radius={1000}\r\n                    options={{\r\n                        strokeColor: \"#66009a\",\r\n                        strokeOpacity: 0.8,\r\n                        strokeWeight: 2,\r\n                        fillColor: `#66009a`,\r\n                        fillOpacity: 0.35,\r\n                        zIndex: 1\r\n                    }}\r\n                />\r\n            ))}\r\n        </GoogleMap>\r\n    ))\r\n);\r\n\r\nexport class NewMap extends Component {\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        marks:[]\r\n    };\r\n    state = {\r\n        marks: []\r\n    };\r\n\r\n    setMark = e => {\r\n        this.setState({ marks: [...this.state.marks, e.latLng] });\r\n    };\r\n\r\n    deleteMarkS = () => {\r\n        this.setState({\r\n            marks: []\r\n        });\r\n    };\r\n\r\n  render() {\r\n    const { marks } = this.state;\r\n    const style = Object.assign({}, mapStyles.map);\r\n    return (\r\n        <div style={style}>\r\n            <button onClick={this.deleteMark}>DELETE MARKS</button>\r\n            <Map\r\n                    loadingElement={<div style={{ height: `100%` }} />}\r\n                    containerElement={<div style={{ height: `400px` }} />}\r\n                    mapElement={<div style={{ height: `100%` }} />}\r\n                    onMapClick={this.setMark}\r\n                    marks={marks}\r\n                />;\r\n    \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GoogleApiWrapper(\r\n    (props) => ({\r\n      apiKey: props.apiKey\r\n    }\r\n  ))(NewMap)"]},"metadata":{},"sourceType":"module"}