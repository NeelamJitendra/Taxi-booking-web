{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\bzzt-test\\\\src\\\\ConformationDialog.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NameSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => this.handleClickOpen,\n        children: \"Open alert dialog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.open,\n        onClose: () => this.handleClose,\n        \"aria-labelledby\": \"alert-dialog-title\",\n        \"aria-describedby\": \"alert-dialog-description\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"alert-dialog-title\",\n          children: \"Use Google's location service?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            id: \"alert-dialog-description\",\n            children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleClose,\n            color: \"primary\",\n            children: \"Disagree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.handleClose,\n            color: \"primary\",\n            autoFocus: true,\n            children: \"Agree\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  }\n\n}\nexport default ConformationDialog;","map":{"version":3,"sources":["C:/JITENDRA/bzzt-test/src/ConformationDialog.js"],"names":["React","Component","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","NameSearch","constructor","props","handleClickOpen","setState","open","handleClose","state","render","ConformationDialog"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,OAAO,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AACtCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOrBC,eAPqB,GAOH,MAAM;AACtB,WAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAd;AACD,KAToB;;AAAA,SAWrBC,WAXqB,GAWP,MAAM;AAClB,WAAKF,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAC;AAAN,OAAd;AACD,KAboB;;AAEf,SAAKE,KAAL,GAAa;AACTF,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAUHG,EAAAA,MAAM,GAAE;AACR,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,UAAhB;AAA2B,QAAA,KAAK,EAAC,SAAjC;AAA2C,QAAA,OAAO,EAAE,MAAI,KAAKL,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKI,KAAL,CAAWF,IADnB;AAEE,QAAA,OAAO,EAAE,MAAI,KAAKC,WAFpB;AAGE,2BAAgB,oBAHlB;AAIE,4BAAiB,0BAJnB;AAAA,gCAME,QAAC,WAAD;AAAa,UAAA,EAAE,EAAC,oBAAhB;AAAA,oBAAsC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE,QAAC,aAAD;AAAA,iCACE,QAAC,iBAAD;AAAmB,YAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE,QAAC,aAAD;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAI,KAAKA,WAA1B;AAAuC,YAAA,KAAK,EAAC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAI,KAAKA,WAA1B;AAAuC,YAAA,KAAK,EAAC,SAA7C;AAAuD,YAAA,SAAS,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BG;;AA7CqC;AAgD1C,eAAeG,kBAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport class NameSearch extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({open:true})\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({open:false})\r\n  };\r\n\r\n  render(){\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={()=>this.handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={this.state.open}\r\n        onClose={()=>this.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending anonymous location data to\r\n            Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>this.handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={()=>this.handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );}\r\n}\r\n\r\nexport default ConformationDialog;\r\n"]},"metadata":{},"sourceType":"module"}