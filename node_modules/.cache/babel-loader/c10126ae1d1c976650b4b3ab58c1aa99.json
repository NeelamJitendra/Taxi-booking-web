{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\Taxi-business-customer\\\\src\\\\NameSearch.js\";\nimport React, { Component } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NameSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = async value => {\n      const results = await geocodeByAddress(value);\n      const latLng = await getLatLng(results[0]);\n      this.setState({\n        address: value\n      }, () => {\n        this.props.setCoordinates(latLng);\n      });\n    };\n\n    this.state = {\n      address: \"\",\n      coordinates: {\n        lat: null,\n        lng: null\n      }\n    };\n  }\n\n  render() {\n    let address = this.state.address;\n    let type = this.props.type;\n    const searchOptions = {\n      componentRestrictions: {\n        country: ['swe']\n      }\n    };\n\n    const renderFunc = ({\n      getInputProps,\n      getSuggestionItemProps,\n      suggestions\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete-root\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getInputProps(),\n        type: \"text\",\n        label: type,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"autocomplete-dropdown-container\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }, this), suggestions.map(suggestion => /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: suggestion.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-field\",\n      children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: e => this.setState({\n          address: e\n        }),\n        onSelect: this.handleSelect,\n        searchOptions: searchOptions,\n        children: [\" \", renderFunc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default NameSearch;","map":{"version":3,"sources":["C:/JITENDRA/Taxi-business-customer/src/NameSearch.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","TextField","NameSearch","constructor","props","handleSelect","value","results","latLng","setState","address","setCoordinates","state","coordinates","lat","lng","render","type","searchOptions","componentRestrictions","country","renderFunc","getInputProps","getSuggestionItemProps","suggestions","loading","map","suggestion","description","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;AAIA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,WAAP;;AAEA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACxCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJ,MAAOC,KAAP,IAAiB;AAC9B,YAAMC,OAAO,GAAG,MAAMR,gBAAgB,CAACO,KAAD,CAAtC;AACA,YAAME,MAAM,GAAG,MAAMR,SAAS,CAACO,OAAO,CAAC,CAAD,CAAR,CAA9B;AAEA,WAAKE,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEJ;AADG,OAAd,EAEG,MAAM;AACP,aAAKF,KAAL,CAAWO,cAAX,CAA0BH,MAA1B;AACD,OAJD;AAMD,KArBkB;;AAEjB,SAAKI,KAAL,GAAa;AACXF,MAAAA,OAAO,EAAE,EADE;AAEXG,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAE,IADM;AAEXC,QAAAA,GAAG,EAAE;AAFM;AAFF,KAAb;AAOD;;AAcDC,EAAAA,MAAM,GAAG;AACP,QAAIN,OAAO,GAAG,KAAKE,KAAL,CAAWF,OAAzB;AACA,QAAIO,IAAI,GAAG,KAAKb,KAAL,CAAWa,IAAtB;AACA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,qBAAqB,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAC,KAAD;AAAX;AADH,KAAtB;;AAIA,UAAMC,UAAU,GAAG,CAAC;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,sBAAjB;AAAyCC,MAAAA;AAAzC,KAAD,kBACjB;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE,sBAAWF,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eACgC,QAAC,SAAD,OAAeA,aAAa,EAA5B;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,KAAK,EAAEL,IAAnD;AAAyD,QAAA,OAAO,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,cADhC,eAEE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,mBACGQ,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADd,EAEGD,WAAW,CAACE,GAAZ,CAAgBC,UAAU,iBACzB,oBAASJ,sBAAsB,CAACI,UAAD,CAA/B;AAAA,iCACE;AAAA,sBAAOA,UAAU,CAACC;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;;AAaA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,kBAAD;AACE,QAAA,KAAK,EAAElB,OADT;AAEE,QAAA,QAAQ,EAAEmB,CAAC,IAAI,KAAKpB,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEmB;AAAX,SAAd,CAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKxB,YAHjB;AAIE,QAAA,aAAa,EAAEa,aAJjB;AAAA,wBAKGG,UALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAzDuC;AA4D1C,eAAenB,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport './App.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './App.css';\r\n\r\nexport class NameSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      coordinates: {\r\n        lat: null,\r\n        lng: null\r\n      }\r\n    };\r\n  }\r\n\r\n  handleSelect = async (value) => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n\r\n    this.setState({\r\n      address: value\r\n    }, () => {\r\n      this.props.setCoordinates(latLng);\r\n    })\r\n\r\n  };\r\n\r\n  render() {\r\n    let address = this.state.address;\r\n    let type = this.props.type;\r\n    const searchOptions = {\r\n      componentRestrictions: { country: ['swe'] }\r\n    }\r\n\r\n    const renderFunc = ({ getInputProps, getSuggestionItemProps, suggestions }) => (\r\n      <div className=\"autocomplete-root\">\r\n        <input {...getInputProps()} /><TextField {...getInputProps()} type='text' label={type} variant=\"outlined\" />\r\n        <div className=\"autocomplete-dropdown-container\">\r\n          {loading && <div>Loading...</div>}\r\n          {suggestions.map(suggestion => (\r\n            <div {...getSuggestionItemProps(suggestion)}>\r\n              <span>{suggestion.description}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className='text-field' >\r\n        <PlacesAutocomplete\r\n          value={address}\r\n          onChange={e => this.setState({ address: e })}\r\n          onSelect={this.handleSelect}\r\n          searchOptions={searchOptions}\r\n        > {renderFunc}\r\n          \r\n        </PlacesAutocomplete>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default NameSearch;"]},"metadata":{},"sourceType":"module"}