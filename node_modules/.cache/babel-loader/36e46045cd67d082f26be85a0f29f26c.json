{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\Taxi-business-customer\\\\src\\\\NewName.js\";\nimport React, { Component } from \"react\";\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MY_API_KEY = \"AIzaSyDwsdjfskhdbfjsdjbfksiTgnoriOAoUOgsUqOs10J0\"; // fake\n\nexport default class GoogleSuggest extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      value: \"\"\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        search: e.target.value,\n        value: e.target.value\n      });\n    };\n\n    this.handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\n      console.log(geocodedPrediction, originalPrediction); // eslint-disable-line\n\n      this.setState({\n        search: \"\",\n        value: geocodedPrediction.formatted_address\n      });\n    };\n\n    this.handleNoResult = () => {\n      console.log(\"No results for \", this.state.search);\n    };\n\n    this.handleStatusUpdate = status => {\n      console.log(status);\n    };\n  }\n\n  render() {\n    const {\n      search,\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ReactGooglePlacesSuggest, {\n      googleMaps: googleMaps,\n      autocompletionRequest: {\n        input: search // Optional options\n        // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\n\n      } // Optional props\n      ,\n      onNoResult: this.handleNoResult,\n      onSelectSuggest: this.handleSelectSuggest,\n      onStatusUpdate: this.handleStatusUpdate,\n      textNoResults: \"My custom no results text\" // null or \"\" if you want to disable the no results item\n      ,\n      customRender: prediction => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"customWrapper\",\n        children: prediction ? prediction.description : \"My custom no results text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        placeholder: \"Search a location\",\n        onChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/JITENDRA/Taxi-business-customer/src/NewName.js"],"names":["React","Component","ReactGooglePlacesSuggest","MY_API_KEY","GoogleSuggest","state","search","value","handleInputChange","e","setState","target","handleSelectSuggest","geocodedPrediction","originalPrediction","console","log","formatted_address","handleNoResult","handleStatusUpdate","status","render","googleMaps","input","prediction","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,wBAAP,MAAqC,6BAArC;;AAEA,MAAMC,UAAU,GAAG,kDAAnB,C,CAAsE;;AAEtE,eAAe,MAAMC,aAAN,SAA4BJ,KAAK,CAACC,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACvDI,KADuD,GAC/C;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAD+C;;AAAA,SAMvDC,iBANuD,GAMnCC,CAAC,IAAI;AACrB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAAEG,CAAC,CAACE,MAAF,CAASJ,KAAlB;AAAyBA,QAAAA,KAAK,EAAEE,CAAC,CAACE,MAAF,CAASJ;AAAzC,OAAd;AACH,KARsD;;AAAA,SAUvDK,mBAVuD,GAUjC,CAACC,kBAAD,EAAqBC,kBAArB,KAA4C;AAC9DC,MAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ,EAAgCC,kBAAhC,EAD8D,CACV;;AACpD,WAAKJ,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAE,EADE;AAEVC,QAAAA,KAAK,EAAEM,kBAAkB,CAACI;AAFhB,OAAd;AAIH,KAhBsD;;AAAA,SAkBvDC,cAlBuD,GAkBtC,MAAM;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKX,KAAL,CAAWC,MAA1C;AACH,KApBsD;;AAAA,SAsBvDa,kBAtBuD,GAsBlCC,MAAM,IAAI;AAC3BL,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACH,KAxBsD;AAAA;;AA0BvDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACf,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAkB,KAAKF,KAA7B;AACA,wBACgB,QAAC,wBAAD;AACI,MAAA,UAAU,EAAEiB,UADhB;AAEI,MAAA,qBAAqB,EAAE;AACnBC,QAAAA,KAAK,EAAEjB,MADY,CAEnB;AACA;;AAHmB,OAF3B,CAOI;AAPJ;AAQI,MAAA,UAAU,EAAE,KAAKY,cARrB;AASI,MAAA,eAAe,EAAE,KAAKN,mBAT1B;AAUI,MAAA,cAAc,EAAE,KAAKO,kBAVzB;AAWI,MAAA,aAAa,EAAC,2BAXlB,CAW8C;AAX9C;AAYI,MAAA,YAAY,EAAEK,UAAU,iBACpB;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKA,UAAU,GACLA,UAAU,CAACC,WADN,GAEL;AAHV;AAAA;AAAA;AAAA;AAAA,cAbR;AAAA,6BAoBI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAElB,KAFX;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,QAAQ,EAAE,KAAKC;AAJnB;AAAA;AAAA;AAAA;AAAA;AApBJ;AAAA;AAAA;AAAA;AAAA,YADhB;AA6BH;;AAzDsD","sourcesContent":["import React, {Component} from \"react\"\r\nimport ReactGooglePlacesSuggest from \"react-google-places-suggest\"\r\n\r\nconst MY_API_KEY = \"AIzaSyDwsdjfskhdbfjsdjbfksiTgnoriOAoUOgsUqOs10J0\" // fake\r\n\r\nexport default class GoogleSuggest extends React.Component {\r\n    state = {\r\n        search: \"\",\r\n        value: \"\",\r\n    }\r\n\r\n    handleInputChange = e => {\r\n        this.setState({search: e.target.value, value: e.target.value})\r\n    }\r\n\r\n    handleSelectSuggest = (geocodedPrediction, originalPrediction) => {\r\n        console.log(geocodedPrediction, originalPrediction) // eslint-disable-line\r\n        this.setState({\r\n            search: \"\",\r\n            value: geocodedPrediction.formatted_address,\r\n        })\r\n    }\r\n\r\n    handleNoResult = () => {\r\n        console.log(\"No results for \", this.state.search)\r\n    }\r\n\r\n    handleStatusUpdate = status => {\r\n        console.log(status)\r\n    }\r\n\r\n    render() {\r\n        const {search, value} = this.state\r\n        return (\r\n                        <ReactGooglePlacesSuggest\r\n                            googleMaps={googleMaps}\r\n                            autocompletionRequest={{\r\n                                input: search,\r\n                                // Optional options\r\n                                // https://developers.google.com/maps/documentation/javascript/reference?hl=fr#AutocompletionRequest\r\n                            }}\r\n                            // Optional props\r\n                            onNoResult={this.handleNoResult}\r\n                            onSelectSuggest={this.handleSelectSuggest}\r\n                            onStatusUpdate={this.handleStatusUpdate}\r\n                            textNoResults=\"My custom no results text\" // null or \"\" if you want to disable the no results item\r\n                            customRender={prediction => (\r\n                                <div className=\"customWrapper\">\r\n                                    {prediction\r\n                                        ? prediction.description\r\n                                        : \"My custom no results text\"}\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            <input\r\n                                type=\"text\"\r\n                                value={value}\r\n                                placeholder=\"Search a location\"\r\n                                onChange={this.handleInputChange}\r\n                            />\r\n                        </ReactGooglePlacesSuggest>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}