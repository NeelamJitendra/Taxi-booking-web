{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\Taxi-business-customer\\\\src\\\\NameSearch.js\";\nimport React, { Component } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NameSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = async value => {\n      const results = await geocodeByAddress(value);\n      const latLng = await getLatLng(results[0]);\n      this.setState({\n        address: value\n      }, () => {\n        this.props.setCoordinates(latLng);\n      });\n    };\n\n    this.renderFunc = (getInputProps, getSuggestionItemProps, suggestions, loading) => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"autocomplete-root\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, { ...getInputProps(),\n          type: \"text\",\n          label: type,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"...loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 18\n          }, this) : null, suggestions.map(suggestion => {\n            const style = {\n              backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\n              maxWidth: '200px'\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                style\n              }),\n              children: suggestion.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this);\n    };\n\n    this.state = {\n      address: \"\",\n      coordinates: {\n        lat: null,\n        lng: null\n      }\n    };\n  }\n\n  render() {\n    let address = this.state.address;\n    let type = this.props.type;\n    const searchOptions = {\n      componentRestrictions: {\n        country: ['swe']\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-field\",\n      children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: e => this.setState({\n          address: e\n        }),\n        onSelect: this.handleSelect,\n        searchOptions: searchOptions,\n        children: [\" \", renderFunc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default NameSearch;","map":{"version":3,"sources":["C:/JITENDRA/Taxi-business-customer/src/NameSearch.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","TextField","NameSearch","constructor","props","handleSelect","value","results","latLng","setState","address","setCoordinates","renderFunc","getInputProps","getSuggestionItemProps","suggestions","loading","type","map","suggestion","style","backgroundColor","active","maxWidth","description","state","coordinates","lat","lng","render","searchOptions","componentRestrictions","country","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;AAIA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,WAAP;;AAEA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACxCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJ,MAAOC,KAAP,IAAiB;AAC9B,YAAMC,OAAO,GAAG,MAAMR,gBAAgB,CAACO,KAAD,CAAtC;AACA,YAAME,MAAM,GAAG,MAAMR,SAAS,CAACO,OAAO,CAAC,CAAD,CAAR,CAA9B;AAEA,WAAKE,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEJ;AADG,OAAd,EAEG,MAAM;AACP,aAAKF,KAAL,CAAWO,cAAX,CAA0BH,MAA1B;AACD,OAJD;AAMD,KArBkB;;AAAA,SAwBnBI,UAxBmB,GAwBN,CAAEC,aAAF,EAAiBC,sBAAjB,EAAyCC,WAAzC,EAAsDC,OAAtD,KAAmE;AAC9E;AAAA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACA,QAAC,SAAD,OAAeH,aAAa,EAA5B;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,KAAK,EAAEI,IAAnD;AAAyD,UAAA,OAAO,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,gBADA,eAGA;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,qBACGD,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,GAA2B,IADrC,EAGGD,WAAW,CAACG,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,kBAAMC,KAAK,GAAG;AACZC,cAAAA,eAAe,EAAEF,UAAU,CAACG,MAAX,GAAoB,SAApB,GAAgC,MADrC;AAEZC,cAAAA,QAAQ,EAAE;AAFE,aAAd;AAKA,gCACE,oBAAST,sBAAsB,CAACK,UAAD,EAAa;AAAEC,gBAAAA;AAAF,eAAb,CAA/B;AAAA,wBACGD,UAAU,CAACK;AADd;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAXA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBD,KA7CkB;;AAEjB,SAAKC,KAAL,GAAa;AACXf,MAAAA,OAAO,EAAE,EADE;AAEXgB,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAE,IADM;AAEXC,QAAAA,GAAG,EAAE;AAFM;AAFF,KAAb;AAOD;;AAsCDC,EAAAA,MAAM,GAAG;AACP,QAAInB,OAAO,GAAG,KAAKe,KAAL,CAAWf,OAAzB;AACA,QAAIO,IAAI,GAAG,KAAKb,KAAL,CAAWa,IAAtB;AACA,UAAMa,aAAa,GAAG;AACpBC,MAAAA,qBAAqB,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAC,KAAD;AAAX;AADH,KAAtB;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE,QAAC,kBAAD;AACE,QAAA,KAAK,EAAEtB,OADT;AAEE,QAAA,QAAQ,EAAEuB,CAAC,IAAI,KAAKxB,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEuB;AAAX,SAAd,CAFjB;AAGE,QAAA,QAAQ,EAAE,KAAK5B,YAHjB;AAIE,QAAA,aAAa,EAAEyB,aAJjB;AAAA,wBAKGlB,UALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AApEuC;AAuE1C,eAAeV,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport './App.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './App.css';\r\n\r\nexport class NameSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      coordinates: {\r\n        lat: null,\r\n        lng: null\r\n      }\r\n    };\r\n  }\r\n\r\n  handleSelect = async (value) => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n\r\n    this.setState({\r\n      address: value\r\n    }, () => {\r\n      this.props.setCoordinates(latLng);\r\n    })\r\n\r\n  };\r\n\r\n  \r\n  renderFunc = ( getInputProps, getSuggestionItemProps, suggestions, loading ) => {\r\n    <div className=\"autocomplete-root\">\r\n    <TextField {...getInputProps()} type='text' label={type} variant=\"outlined\" />\r\n\r\n    <div className=\"autocomplete-dropdown-container\">\r\n      {loading ? <div>...loading</div> : null}\r\n\r\n      {suggestions.map(suggestion => {\r\n        const style = {\r\n          backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\r\n          maxWidth: '200px'\r\n        };\r\n\r\n        return (\r\n          <div {...getSuggestionItemProps(suggestion, { style })}>\r\n            {suggestion.description}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  </div>\r\n  }\r\n\r\n  render() {\r\n    let address = this.state.address;\r\n    let type = this.props.type;\r\n    const searchOptions = {\r\n      componentRestrictions: { country: ['swe'] }\r\n    }\r\n\r\n    return (\r\n      <div className='text-field' >\r\n        <PlacesAutocomplete\r\n          value={address}\r\n          onChange={e => this.setState({ address: e })}\r\n          onSelect={this.handleSelect}\r\n          searchOptions={searchOptions}\r\n        > {renderFunc}\r\n          \r\n        </PlacesAutocomplete>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default NameSearch;"]},"metadata":{},"sourceType":"module"}