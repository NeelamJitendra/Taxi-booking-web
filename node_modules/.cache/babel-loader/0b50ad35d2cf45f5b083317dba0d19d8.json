{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\bzzt-test\\\\src\\\\NameSearch.js\";\nimport React, { Component } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NameSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = async value => {\n      const results = await geocodeByAddress(value);\n      const latLng = await getLatLng(results[0]);\n      this.setState({\n        address: value,\n        coordinates: latLng\n      }, () => {\n        this.props.setCoordinates(this.state.coordinates);\n      });\n    };\n\n    this.state = {\n      address: \"\",\n      coordinates: {\n        lat: null,\n        lng: null\n      }\n    };\n  }\n\n  render() {\n    let address = this.state.address;\n    let coordinates = this.state.coordinates;\n    let type = this.props.type;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: e => this.setState({\n          address: e\n        }),\n        onSelect: this.handleSelect,\n        children: ({\n          getInputProps,\n          suggestions,\n          getSuggestionItemProps,\n          loading\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Latitude: \", coordinates.lat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Longitude: \", coordinates.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, { ...getInputProps({\n              placeholder: \"Type address\"\n            }),\n            label: type,\n            variant: \"outlined\",\n            value: 'current Location'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"...loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 26\n            }, this) : null, suggestions.map(suggestion => {\n              const style = {\n                backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                  style\n                }),\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  }\n\n}\nexport default NameSearch;","map":{"version":3,"sources":["C:/JITENDRA/bzzt-test/src/NameSearch.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","TextField","NameSearch","constructor","props","handleSelect","value","results","latLng","setState","address","coordinates","setCoordinates","state","lat","lng","render","type","e","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;AAIA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AACA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWpBC,YAXoB,GAWL,MAAOC,KAAP,IAAiB;AAC/B,YAAMC,OAAO,GAAG,MAAMR,gBAAgB,CAACO,KAAD,CAAtC;AACA,YAAME,MAAM,GAAG,MAAMR,SAAS,CAACO,OAAO,CAAC,CAAD,CAAR,CAA9B;AAEA,WAAKE,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEJ,KADC;AAEVK,QAAAA,WAAW,EAAEH;AAFH,OAAd,EAGG,MAAI;AACH,aAAKJ,KAAL,CAAWQ,cAAX,CAA0B,KAAKC,KAAL,CAAWF,WAArC;AACH,OALD;AAOD,KAtBoB;;AAEf,SAAKE,KAAL,GAAa;AACTH,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,WAAW,EAAC;AACRG,QAAAA,GAAG,EAAE,IADG;AAERC,QAAAA,GAAG,EAAE;AAFG;AAFH,KAAb;AAOH;;AAeHC,EAAAA,MAAM,GAAE;AACJ,QAAIN,OAAO,GAAC,KAAKG,KAAL,CAAWH,OAAvB;AACA,QAAIC,WAAW,GAAC,KAAKE,KAAL,CAAWF,WAA3B;AACA,QAAIM,IAAI,GAAE,KAAKb,KAAL,CAAWa,IAArB;AACJ,wBACE;AAAA,6BACE,QAAC,kBAAD;AACE,QAAA,KAAK,EAAEP,OADT;AAEE,QAAA,QAAQ,EAAEQ,CAAC,IAAE,KAAKT,QAAL,CAAc;AAACC,UAAAA,OAAO,EAACQ;AAAT,SAAd,CAFf;AAGE,QAAA,QAAQ,EAAE,KAAKb,YAHjB;AAAA,kBAKG,CAAC;AAAEc,UAAAA,aAAF;AAAiBC,UAAAA,WAAjB;AAA8BC,UAAAA,sBAA9B;AAAsDC,UAAAA;AAAtD,SAAD,kBACC;AAAA,kCACE;AAAA,qCAAcX,WAAW,CAACG,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sCAAeH,WAAW,CAACI,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAIE,QAAC,SAAD,OAAeI,aAAa,CAAC;AAAEI,cAAAA,WAAW,EAAE;AAAf,aAAD,CAA5B;AAA+D,YAAA,KAAK,EAAEN,IAAtE;AAA6E,YAAA,OAAO,EAAC,UAArF;AACI,YAAA,KAAK,EAAE;AADX;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAA,uBACGK,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,GAA2B,IADrC,EAGGF,WAAW,CAACI,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,oBAAMC,KAAK,GAAG;AACZC,gBAAAA,eAAe,EAAEF,UAAU,CAACG,MAAX,GAAoB,SAApB,GAAgC;AADrC,eAAd;AAIA,kCACE,oBAASP,sBAAsB,CAACI,UAAD,EAAa;AAAEC,kBAAAA;AAAF,iBAAb,CAA/B;AAAA,0BACGD,UAAU,CAACI;AADd;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,aAVA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoCC;;AAjEuC;AAoE1C,eAAe3B,UAAf","sourcesContent":["import React, {Component}from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport './App.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nexport class NameSearch extends Component {\r\n    constructor(props) {\r\n        super(props);    \r\n        this.state = {\r\n            address:\"\",\r\n            coordinates:{\r\n                lat: null,\r\n                lng: null\r\n            }\r\n        };\r\n    }\r\n\r\n   handleSelect = async (value) => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    \r\n    this.setState({\r\n        address: value,\r\n        coordinates: latLng\r\n    }, ()=>{\r\n        this.props.setCoordinates(this.state.coordinates);\r\n    })\r\n\r\n  };\r\n\r\n  render(){\r\n      let address=this.state.address;\r\n      let coordinates=this.state.coordinates;\r\n      let type= this.props.type;\r\n  return (\r\n    <div>\r\n      <PlacesAutocomplete\r\n        value={address}\r\n        onChange={e=>this.setState({address:e})}\r\n        onSelect={this.handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div>\r\n            <p>Latitude: {coordinates.lat}</p>\r\n            <p>Longitude: {coordinates.lng}</p>\r\n\r\n            <TextField {...getInputProps({ placeholder: \"Type address\" })} label={type}  variant=\"outlined\" \r\n                value={'current Location'}/>\r\n\r\n            <div>\r\n              {loading ? <div>...loading</div> : null}\r\n\r\n              {suggestions.map(suggestion => {\r\n                const style = {\r\n                  backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\"\r\n                };\r\n\r\n                return (\r\n                  <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                    {suggestion.description}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n\r\n  }\r\n}\r\n\r\nexport default NameSearch;"]},"metadata":{},"sourceType":"module"}