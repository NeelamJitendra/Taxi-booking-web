{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\bzzt-test\\\\src\\\\NameSearch.js\";\nimport React, { Component } from \"react\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class NameSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSelect = async value => {\n      const results = await geocodeByAddress(value);\n      const latLng = await getLatLng(results[0]);\n      this.setState({\n        address: value,\n        coordinates: latLng\n      }, () => {\n        this.props.setCoordinates(this.state.coordinates);\n      });\n    };\n\n    this.state = {\n      address: \"\",\n      coordinates: {\n        lat: null,\n        lng: null\n      }\n    };\n  }\n\n  render() {\n    let address = this.state.address;\n    let type = this.props.type;\n    const searchOptions = {\n      componentRestrictions: {\n        country: ['swe']\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: e => this.setState({\n          address: e\n        }),\n        onSelect: this.handleSelect,\n        searchOptions: searchOptions,\n        children: ({\n          getInputProps,\n          suggestions,\n          getSuggestionItemProps,\n          loading\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            className: \"text-field\",\n            ...getInputProps({\n              placeholder: \"Type address\"\n            }),\n            type: \"text\",\n            label: type,\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"...loading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 28\n            }, this) : null, suggestions.map(suggestion => {\n              const style = {\n                backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\n                maxWidth: '200px'\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", { ...getSuggestionItemProps(suggestion, {\n                  style\n                }),\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default NameSearch;","map":{"version":3,"sources":["C:/JITENDRA/bzzt-test/src/NameSearch.js"],"names":["React","Component","PlacesAutocomplete","geocodeByAddress","getLatLng","TextField","NameSearch","constructor","props","handleSelect","value","results","latLng","setState","address","coordinates","setCoordinates","state","lat","lng","render","type","searchOptions","componentRestrictions","country","e","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","maxWidth","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,IACEC,gBADF,EAEEC,SAFF,QAGO,2BAHP;AAIA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,WAAP;;AAEA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AACxCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,YAXmB,GAWJ,MAAOC,KAAP,IAAiB;AAC9B,YAAMC,OAAO,GAAG,MAAMR,gBAAgB,CAACO,KAAD,CAAtC;AACA,YAAME,MAAM,GAAG,MAAMR,SAAS,CAACO,OAAO,CAAC,CAAD,CAAR,CAA9B;AAEA,WAAKE,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAEJ,KADG;AAEZK,QAAAA,WAAW,EAAEH;AAFD,OAAd,EAGG,MAAM;AACP,aAAKJ,KAAL,CAAWQ,cAAX,CAA0B,KAAKC,KAAL,CAAWF,WAArC;AACD,OALD;AAOD,KAtBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXH,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,WAAW,EAAE;AACXG,QAAAA,GAAG,EAAE,IADM;AAEXC,QAAAA,GAAG,EAAE;AAFM;AAFF,KAAb;AAOD;;AAeDC,EAAAA,MAAM,GAAG;AACP,QAAIN,OAAO,GAAG,KAAKG,KAAL,CAAWH,OAAzB;AACA,QAAIO,IAAI,GAAG,KAAKb,KAAL,CAAWa,IAAtB;AACA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,qBAAqB,EAAE;AAAEC,QAAAA,OAAO,EAAE,CAAC,KAAD;AAAX;AADH,KAAtB;AAGA,wBACE;AAAA,6BACE,QAAC,kBAAD;AACE,QAAA,KAAK,EAAEV,OADT;AAEE,QAAA,QAAQ,EAAEW,CAAC,IAAI,KAAKZ,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEW;AAAX,SAAd,CAFjB;AAGE,QAAA,QAAQ,EAAE,KAAKhB,YAHjB;AAIE,QAAA,aAAa,EAAEa,aAJjB;AAAA,kBAMG,CAAC;AAAEI,UAAAA,aAAF;AAAiBC,UAAAA,WAAjB;AAA8BC,UAAAA,sBAA9B;AAAsDC,UAAAA;AAAtD,SAAD,kBACC;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,YAArB;AAAA,eAAsCH,aAAa,CAAC;AAAEI,cAAAA,WAAW,EAAE;AAAf,aAAD,CAAnD;AAAsF,YAAA,IAAI,EAAC,MAA3F;AAAkG,YAAA,KAAK,EAAET,IAAzG;AAA+G,YAAA,OAAO,EAAC;AAAvH;AAAA;AAAA;AAAA;AAAA,kBADF,eAGE;AAAA,uBACGQ,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,GAA2B,IADrC,EAGGF,WAAW,CAACI,GAAZ,CAAgBC,UAAU,IAAI;AAC7B,oBAAMC,KAAK,GAAG;AACZC,gBAAAA,eAAe,EAAEF,UAAU,CAACG,MAAX,GAAoB,SAApB,GAAgC,MADrC;AAEZC,gBAAAA,QAAQ,EAAE;AAFE,eAAd;AAKA,kCACE,oBAASR,sBAAsB,CAACI,UAAD,EAAa;AAAEC,kBAAAA;AAAF,iBAAb,CAA/B;AAAA,0BACGD,UAAU,CAACK;AADd;AAAA;AAAA;AAAA;AAAA,sBADF;AAKD,aAXA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD;;AAjEuC;AAoE1C,eAAe/B,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport './App.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './App.css';\r\n\r\nexport class NameSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      address: \"\",\r\n      coordinates: {\r\n        lat: null,\r\n        lng: null\r\n      }\r\n    };\r\n  }\r\n\r\n  handleSelect = async (value) => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n\r\n    this.setState({\r\n      address: value,\r\n      coordinates: latLng\r\n    }, () => {\r\n      this.props.setCoordinates(this.state.coordinates);\r\n    })\r\n\r\n  };\r\n\r\n  render() {\r\n    let address = this.state.address;\r\n    let type = this.props.type;\r\n    const searchOptions = {\r\n      componentRestrictions: { country: ['swe'] }\r\n    }\r\n    return (\r\n      <div>\r\n        <PlacesAutocomplete\r\n          value={address}\r\n          onChange={e => this.setState({ address: e })}\r\n          onSelect={this.handleSelect}\r\n          searchOptions={searchOptions}\r\n        >\r\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n            <div>\r\n              <TextField className='text-field' {...getInputProps({ placeholder: \"Type address\" })} type='text' label={type} variant=\"outlined\" />\r\n\r\n              <div>\r\n                {loading ? <div>...loading</div> : null}\r\n\r\n                {suggestions.map(suggestion => {\r\n                  const style = {\r\n                    backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\r\n                    maxWidth: '200px'\r\n                  };\r\n\r\n                  return (\r\n                    <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                      {suggestion.description}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </PlacesAutocomplete>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default NameSearch;"]},"metadata":{},"sourceType":"module"}