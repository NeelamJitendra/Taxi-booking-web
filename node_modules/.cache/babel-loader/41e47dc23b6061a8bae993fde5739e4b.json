{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\bzzt-test\\\\src\\\\NewMap.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker, Polyline } from 'google-maps-react';\nimport taxi from './taxi.png';\nimport stop from './stop.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '75%',\n    height: '100%'\n  }\n};\nexport class NewMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n\n    this.showMarkers = () => {\n      let route = this.props.route;\n\n      if (route.length !== 0) {\n        return route.map(mrk => /*#__PURE__*/_jsxDEV(Polyline, {\n          path: mrk,\n          geodesic: true,\n          options: {\n            strokeColor: 'red',\n            strokeOpacity: 1,\n            strokeWeight: 4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this));\n      }\n    };\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    const fromCoordinates = this.props.fromCoordinates;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        google: this.props.google,\n        zoom: 12,\n        initialCenter: {\n          lat: 59.33,\n          lng: 18.056\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          lat: fromCoordinates.lat,\n          lng: fromCoordinates.lng,\n          icon: {\n            url: taxi,\n            scaledSize: new this.props.google.maps.Size(60, 50)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this), this.showMarkers()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nexport default GoogleApiWrapper(props => ({\n  apiKey: props.apiKey\n}))(NewMap);","map":{"version":3,"sources":["C:/JITENDRA/bzzt-test/src/NewMap.js"],"names":["React","Component","Map","GoogleApiWrapper","Marker","Polyline","taxi","stop","mapStyles","map","position","width","height","NewMap","state","showingInfoWindow","activeMarker","selectedPlace","showMarkers","route","props","length","mrk","strokeColor","strokeOpacity","strokeWeight","render","style","Object","assign","fromCoordinates","google","lat","lng","url","scaledSize","maps","Size","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,EAAwCC,QAAxC,QAAwD,mBAAxD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EAAE,UADP;AAEHC,IAAAA,KAAK,EAAE,KAFJ;AAGHC,IAAAA,MAAM,EAAE;AAHL;AADS,CAAlB;AAQE,OAAO,MAAMC,MAAN,SAAqBZ,SAArB,CAA+B;AAAA;AAAA;AAAA,SACpCa,KADoC,GAC5B;AACJC,MAAAA,iBAAiB,EAAE,KADf;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,aAAa,EAAE;AAHX,KAD4B;;AAAA,SAMpCC,WANoC,GAMtB,MAAM;AAClB,UAAIC,KAAK,GAAE,KAAKC,KAAL,CAAWD,KAAtB;;AACA,UAAGA,KAAK,CAACE,MAAN,KAAiB,CAApB,EAAsB;AACpB,eAAOF,KAAK,CAACV,GAAN,CAAUa,GAAG,iBAClB,QAAC,QAAD;AACE,UAAA,IAAI,EAAEA,GADR;AAEE,UAAA,QAAQ,EAAE,IAFZ;AAGE,UAAA,OAAO,EAAE;AACPC,YAAAA,WAAW,EAAE,KADN;AAEPC,YAAAA,aAAa,EAAE,CAFR;AAGPC,YAAAA,YAAY,EAAE;AAHP;AAHX;AAAA;AAAA;AAAA;AAAA,gBADK,CAAP;AAWD;AACF,KArBmC;AAAA;;AAsBtCC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,SAAS,CAACC,GAA5B,CAAd;AACA,UAAMqB,eAAe,GAAE,KAAKV,KAAL,CAAWU,eAAlC;AAEA,wBACI;AAAK,MAAA,KAAK,EAAEH,KAAZ;AAAA,6BACF,QAAC,GAAD;AACE,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWW,MADrB;AAEE,QAAA,IAAI,EAAE,EAFR;AAIE,QAAA,aAAa,EACX;AACEC,UAAAA,GAAG,EAAE,KADP;AAEEC,UAAAA,GAAG,EAAE;AAFP,SALJ;AAAA,gCAUC,QAAC,MAAD;AACG,UAAA,GAAG,EAAGH,eAAe,CAACE,GADzB;AAEG,UAAA,GAAG,EAAEF,eAAe,CAACG,GAFxB;AAGG,UAAA,IAAI,EAAE;AACJC,YAAAA,GAAG,EAAE5B,IADD;AAEJ6B,YAAAA,UAAU,EAAG,IAAI,KAAKf,KAAL,CAAWW,MAAX,CAAkBK,IAAlB,CAAuBC,IAA3B,CAAgC,EAAhC,EAAmC,EAAnC;AAFT;AAHT;AAAA;AAAA;AAAA;AAAA,gBAVD,EAkBK,KAAKnB,WAAL,EAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBD;;AAlDqC;AAoDxC,eAAef,gBAAgB,CAC5BiB,KAAD,KAAY;AACVkB,EAAAA,MAAM,EAAElB,KAAK,CAACkB;AADJ,CAAZ,CAD6B,CAAhB,CAIZzB,MAJY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker, Polyline } from 'google-maps-react';\r\nimport taxi from './taxi.png';\r\nimport stop from './stop.png';\r\n\r\nconst mapStyles = {\r\n    map: {\r\n      position: 'absolute',\r\n      width: '75%',\r\n      height: '100%'\r\n    }\r\n  };\r\n\r\n  export class NewMap extends Component {\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {}\r\n    };\r\n    showMarkers = () => {\r\n      let route= this.props.route;\r\n      if(route.length !== 0){\r\n        return route.map(mrk => (\r\n          <Polyline\r\n            path={mrk}\r\n            geodesic={true}\r\n            options={{\r\n              strokeColor: 'red',\r\n              strokeOpacity: 1,\r\n              strokeWeight: 4\r\n            }}\r\n          />\r\n        ))\r\n      }\r\n    }\r\n  render() {\r\n    const style = Object.assign({}, mapStyles.map);\r\n    const fromCoordinates= this.props.fromCoordinates;\r\n  \r\n    return (\r\n        <div style={style}>\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={12}\r\n        \r\n        initialCenter={\r\n          {\r\n            lat: 59.33,\r\n            lng: 18.056\r\n          }\r\n        }\r\n      ><Marker \r\n          lat={ fromCoordinates.lat}\r\n          lng={fromCoordinates.lng}\r\n          icon={{\r\n            url: taxi,\r\n            scaledSize:  new this.props.google.maps.Size(60,50)\r\n            }}\r\n  \r\n        />{this.showMarkers()}\r\n      </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GoogleApiWrapper(\r\n  (props) => ({\r\n    apiKey: props.apiKey\r\n  }\r\n))(NewMap)"]},"metadata":{},"sourceType":"module"}