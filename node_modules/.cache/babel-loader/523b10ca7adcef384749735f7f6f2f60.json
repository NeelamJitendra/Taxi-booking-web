{"ast":null,"code":"var _jsxFileName = \"C:\\\\JITENDRA\\\\bzzt-test\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport MapContainer from './MapContainer';\nimport NameSearch from './NameSearch';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport BzztLogo from './BzztLogo.jpg';\nimport ConformationDialog from './ConformationDialog';\nimport RideStatus from './RideStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toCoordinates: {},\n      fromCoordinates: {}\n    };\n\n    this.setCoordinates = (coordinates, type) => {\n      this.setState({\n        [type]: coordinates\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        openConfDialog: false,\n        timeEstimate: {},\n        BookRes: {}\n      });\n    };\n\n    this.handleSubmit = () => {\n      let toCoordinates = this.state.toCoordinates;\n      let fromCoordinates = this.state.fromCoordinates;\n      let rideBody = {\n        \"from\": {\n          \"latitude\": 59.339898,\n          \"longitude\": 18.03958\n        },\n        \"to\": {\n          \"latitude\": 59.343933,\n          \"longitude\": 18.055505\n        }\n      };\n      /*{\n        \"from\": {\n          \"latitude\": toCoordinates.lat,\n          \"longitude\": toCoordinates.lng\n        },\n        \"to\": {\n          \"latitude\": fromCoordinates.lat,\n          \"longitude\": fromCoordinates.lng\n        }\n      }*/\n\n      fetch('https://test.bzzt.se/api/external/time_estimate', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer 0E919FC4E1A356007719337034B72C2750FFB388FFF8DF5C1C68536D0A8B8BBB',\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(rideBody)\n      }).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          response.text().then(text => {\n            const error = JSON.parse(text);\n            throw alert(error.message);\n          });\n        }\n      }).then(data => {\n        if (data !== undefined) {\n          this.setState({\n            timeEstimate: data,\n            openConfDialog: true,\n            BookRes: {}\n          });\n        }\n      }).catch(error => alert(error));\n    };\n\n    this.handleBookRes = data => {\n      this.setState({\n        BookRes: data,\n        route: data.route.estimated,\n        openConfDialog: false\n      });\n    };\n\n    this.rideStatus = BookRes => {\n      if (BookRes !== null) {\n        return /*#__PURE__*/_jsxDEV(RideStatus, {\n          BookRes: BookRes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }, this);\n      }\n    };\n\n    this.state = {\n      toCoordinates: {},\n      fromCoordinates: {},\n      timeEstimate: {},\n      openConfDialog: false,\n      BookRes: {},\n      route: []\n    };\n  }\n\n  render() {\n    let openConfDialog = this.state.openConfDialog;\n    let timeEstimate = this.state.timeEstimate;\n    let toCoordinates = this.state.toCoordinates;\n    let fromCoordinates = this.state.fromCoordinates;\n    let BookRes = this.state.BookRes;\n    let route = this.state.route;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"flex-start\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: BzztLogo,\n              alt: 'BzztLogo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NameSearch, {\n              setCoordinates: e => this.setCoordinates(e, 'fromCoordinates'),\n              type: 'From'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(NameSearch, {\n              setCoordinates: e => this.setCoordinates(e, 'toCoordinates'),\n              type: 'To'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.handleSubmit(),\n              variant: \"outlined\",\n              color: \"primary\",\n              children: \"Book Ride\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ConformationDialog, {\n              openConfDialog: openConfDialog,\n              toCoordinates: toCoordinates,\n              fromCoordinates: fromCoordinates,\n              timeEstimate: timeEstimate,\n              handleBookRes: e => this.handleBookRes(e),\n              handleClose: () => this.handleClose()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), this.rideStatus(BookRes)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            fromCoordinates: fromCoordinates,\n            toCoordinates: toCoordinates,\n            route: route\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["C:/JITENDRA/bzzt-test/src/App.js"],"names":["React","Component","MapContainer","NameSearch","Grid","Button","BzztLogo","ConformationDialog","RideStatus","App","constructor","props","state","toCoordinates","fromCoordinates","setCoordinates","coordinates","type","setState","handleClose","openConfDialog","timeEstimate","BookRes","handleSubmit","rideBody","fetch","method","headers","body","JSON","stringify","then","response","ok","json","text","error","parse","alert","message","data","undefined","catch","handleBookRes","route","estimated","rideStatus","render","e"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport MapContainer from './MapContainer';\nimport NameSearch from './NameSearch';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport BzztLogo from './BzztLogo.jpg';\nimport ConformationDialog from './ConformationDialog';\nimport RideStatus from './RideStatus';\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toCoordinates: {},\n      fromCoordinates: {},\n      timeEstimate: {},\n      openConfDialog: false,\n      BookRes: {},\n      route: []\n    };\n  }\n  state = {\n    toCoordinates: {},\n    fromCoordinates: {}\n  };\n\n  setCoordinates = (coordinates, type) => {\n    this.setState({\n      [type]: coordinates\n    })\n  }\n\n  handleClose = () => {\n    this.setState({\n      openConfDialog: false,\n      timeEstimate: {},\n      BookRes: {}\n    })\n  }\n\n  handleSubmit = () => {\n    let toCoordinates = this.state.toCoordinates;\n    let fromCoordinates = this.state.fromCoordinates;\n    let rideBody = {\n      \"from\": {\n        \"latitude\": 59.339898,\n        \"longitude\": 18.03958\n      },\n      \"to\": {\n        \"latitude\": 59.343933,\n        \"longitude\": 18.055505\n      }\n    }\n    /*{\n      \"from\": {\n        \"latitude\": toCoordinates.lat,\n        \"longitude\": toCoordinates.lng\n      },\n      \"to\": {\n        \"latitude\": fromCoordinates.lat,\n        \"longitude\": fromCoordinates.lng\n      }\n    }*/\n\n    fetch('https://test.bzzt.se/api/external/time_estimate', {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer 0E919FC4E1A356007719337034B72C2750FFB388FFF8DF5C1C68536D0A8B8BBB',\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(rideBody),\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        } else {\n          response.text().then(text => {\n\n            const error = JSON.parse(text);\n            throw alert(error.message)\n          })\n        }\n      })\n      .then(data => {\n        if (data !== undefined) {\n          this.setState({ timeEstimate: data, openConfDialog: true, BookRes: {} })\n        }\n      })\n      .catch(error => alert(error));\n  }\n\n  handleBookRes = (data) => {\n\n    this.setState({ BookRes: data, route: data.route.estimated, openConfDialog: false })\n  }\n\n  rideStatus = (BookRes)=>{\n    if(BookRes !== null){\n      return <RideStatus BookRes={BookRes} />\n    }\n  }\n  render() {\n    let openConfDialog = this.state.openConfDialog;\n    let timeEstimate = this.state.timeEstimate;\n    let toCoordinates = this.state.toCoordinates;\n    let fromCoordinates = this.state.fromCoordinates;\n    let BookRes = this.state.BookRes;\n    let route = this.state.route;\n    return (\n      <div>\n        <Grid container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\">\n          <Grid item xs={6} sm={3}>\n            <form className=\"form-wrapper\">\n              <img src={BzztLogo} alt={'BzztLogo'} />\n              <NameSearch setCoordinates={(e) => this.setCoordinates(e, 'fromCoordinates')} type={'From'}/>\n              <NameSearch setCoordinates={(e) => this.setCoordinates(e, 'toCoordinates')} type={'To'} />\n              <Button onClick={() => this.handleSubmit()} variant=\"outlined\" color=\"primary\">Book Ride</Button>\n              <ConformationDialog\n                openConfDialog={openConfDialog}\n                toCoordinates={toCoordinates}\n                fromCoordinates={fromCoordinates}\n                timeEstimate={timeEstimate}\n                handleBookRes={(e) => this.handleBookRes(e)}\n                handleClose={() => this.handleClose()} />\n              <br />\n              {this.rideStatus(BookRes)}\n            </form>\n          </Grid>\n          <Grid item xs>\n            <MapContainer\n              fromCoordinates={fromCoordinates}\n              toCoordinates={toCoordinates}\n              route={route} />\n          </Grid>\n        </Grid>\n\n\n      </div>\n    );\n\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}